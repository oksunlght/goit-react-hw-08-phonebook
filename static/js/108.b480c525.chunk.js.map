{"version":3,"file":"static/js/108.b480c525.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Spinner/Spinner.jsx","pages/ContactList.styled.jsx","pages/ContactList.jsx"],"sourcesContent":["const getContacts = state => state.contacts.contacts.items;\nconst getFilter = state => state.contacts.filter;\n\nconst contactsSelectors = {\n  getContacts,\n  getFilter,\n};\n\nexport default contactsSelectors;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n\n  font-size: 18px;\n\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\n\nexport const DeleteBtn = styled.button`\n  margin-left: 25px;\n\n  font-size: 16px;\n\n  color: #585858;\n\n  &:hover,\n  &:focus {\n    color: orangered;\n  }\n`;\n\nexport const ContactInfo = styled.span`\n  margin-left: 5px;\n`;\n\nexport const Number = styled.span`\n  color: rgb(255, 69, 0, 0.8);\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport contactsOperations from 'redux/contacts/contacts-operations';\nimport contactsSelectors from 'redux/contacts/contacts-selectors';\nimport { BiPhone } from 'react-icons/bi';\nimport { RiDeleteBin6Line } from 'react-icons/ri';\nimport { Item, DeleteBtn, ContactInfo, Number } from './ContactItem.styled';\n\nconst ContactItem = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const filter = useSelector(contactsSelectors.getFilter);\n\n  const filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return filteredContacts.map(({ id, name, number }) => {\n    return (\n      <Item key={id}>\n        <BiPhone />\n        <ContactInfo>\n          {name} <Number>{number}</Number>\n        </ContactInfo>\n        <DeleteBtn\n          type=\"button\"\n          onClick={() => dispatch(contactsOperations.deleteContact(id))}\n        >\n          <RiDeleteBin6Line size={30} />\n        </DeleteBtn>\n      </Item>\n    );\n  });\n};\n\nexport default ContactItem;\n","import styled from '@emotion/styled';\n\nexport const ContactForm = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  width: 570px;\n`;\n\nexport const Input = styled.input`\n  margin-top: 10px;\n\n  width: 350px;\n\n  padding: 8px 15px;\n\n  color: #001133;\n  font-size: 18px;\n\n  border: none;\n  outline: none;\n  border-bottom: 2px solid #000;\n  border-bottom-left-radius: 20%;\n\n  &:hover,\n  &:focus {\n    border-bottom: 2px solid orangered;\n  }\n`;\n\nexport const InputLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 30px;\n\n  font-size: 18px;\n`;\n\nexport const SubmitBtn = styled.button`\n  margin-bottom: 50px;\n  width: 45px;\n  height: 45px;\n\n  color: #585858;\n\n  &:hover,\n  &:focus {\n    color: orangered;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport toast from 'react-hot-toast';\nimport { IoIosAddCircleOutline } from 'react-icons/io';\nimport contactsSelectors from 'redux/contacts/contacts-selectors';\nimport contactsOperations from 'redux/contacts/contacts-operations';\nimport { ContactForm, InputLabel, Input, SubmitBtn } from './Form.styled';\n\nconst Form = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    const newContact = {\n      name,\n      number,\n    };\n\n    const contactName = contacts.map(contact => contact.name);\n\n    if (contactName.includes(name)) {\n      toast.error(`${name} is already in contacts`);\n      form.reset();\n      return;\n    }\n\n    dispatch(contactsOperations.addContact(newContact));\n    toast.success(`${name} successfully added to the contacts list`);\n    form.reset();\n  };\n\n  return (\n    <ContactForm onSubmit={handleSubmit}>\n      <InputLabel>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          autoComplete=\"off\"\n          required\n        />\n      </InputLabel>\n      <InputLabel>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          autoComplete=\"off\"\n          required\n        />\n      </InputLabel>\n\n      <SubmitBtn type=\"submit\">\n        <IoIosAddCircleOutline size={45} />\n      </SubmitBtn>\n    </ContactForm>\n  );\n};\n\nexport default Form;\n","import styled from '@emotion/styled';\n\nexport const InputLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 30px;\n\n  font-size: 18px;\n`;\n\nexport const Input = styled.input`\n  margin-top: 10px;\n\n  width: 350px;\n\n  padding: 8px 15px;\n\n  font-size: 18px;\n\n  border: none;\n  outline: none;\n  border-bottom: 2px solid #000;\n  border-bottom-left-radius: 20%;\n\n  &:hover,\n  &:focus {\n    border-bottom: 2px solid orangered;\n  }\n`;\n\nexport const FilterForm = styled.form`\n  width: 570px;\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/contactsSlice';\nimport contactsSelectors from 'redux/contacts/contacts-selectors';\nimport { InputLabel, Input, FilterForm } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(contactsSelectors.getFilter);\n\n  const onFilterChange = e => {\n    dispatch(filterContacts(e.currentTarget.value));\n  };\n\n  return (\n    <FilterForm>\n      <InputLabel>\n        Find contacts by name\n        <Input type=\"text\" value={filter} onChange={onFilterChange} />\n      </InputLabel>\n    </FilterForm>\n  );\n};\n\nexport default Filter;\n","import { ColorRing } from 'react-loader-spinner';\n\nconst Spinner = () => (\n  <ColorRing\n    visible={true}\n    height=\"48\"\n    width=\"48\"\n    ariaLabel=\"blocks-loading\"\n    wrapperStyle={{}}\n    wrapperClass=\"blocks-wrapper\"\n    colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n  />\n);\n\nexport default Spinner;\n","import styled from '@emotion/styled';\n\nexport const ContactsTitle = styled.h2`\n  margin-bottom: 25px;\n\n  font-size: 20px;\n`;\n\nexport const FormTitle = styled.h1`\n  margin-bottom: 25px;\n\n  text-align: center;\n\n  font-size: 38px;\n  font-weight: 700;\n`;\n\nexport const ContactsControllers = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const ListWrapper = styled.div`\n  width: 570px;\n  text-align: center;\n`;\n\nexport const Container = styled.div`\n  justify-content: space-around;\n`;\n\nexport const List = styled.ul`\n  padding-left: 50px;\n`;\n\nexport const FormsWrapper = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport Form from 'components/Form/Form';\nimport Filter from 'components/Filter/Filter';\nimport Spinner from 'components/Spinner/Spinner';\nimport contactsSelectors from 'redux/contacts/contacts-selectors';\nimport contactsOperations from 'redux/contacts/contacts-operations';\nimport {\n  ContactsTitle,\n  FormTitle,\n  ContactsControllers,\n  ListWrapper,\n  Container,\n  List,\n  FormsWrapper,\n} from './ContactList.styled';\n\nconst ContactList = ({ children }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <FormTitle>Phonebook</FormTitle>\n\n      <ContactsControllers>\n        <FormsWrapper>\n          <Form />\n          <Filter />\n        </FormsWrapper>\n\n        <ListWrapper>\n          <ContactsTitle>Contacts</ContactsTitle>\n\n          {contacts.length !== 0 ? (\n            <List>\n              <ContactItem />\n            </List>\n          ) : (\n            <p>You do not have any contacts</p>\n          )}\n          {contacts.isLoading && <Spinner />}\n        </ListWrapper>\n      </ContactsControllers>\n    </Container>\n  );\n};\n\nexport default ContactList;\n"],"names":["getContacts","state","contacts","items","getFilter","filter","Item","styled","DeleteBtn","ContactInfo","Number","dispatch","useDispatch","useSelector","contactsSelectors","name","toLowerCase","includes","map","id","number","type","onClick","contactsOperations","size","ContactForm","Input","InputLabel","SubmitBtn","onSubmit","e","preventDefault","form","currentTarget","elements","value","newContact","contact","toast","reset","pattern","title","autoComplete","required","FilterForm","onChange","filterContacts","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","ContactsTitle","FormTitle","ContactsControllers","ListWrapper","Container","List","FormsWrapper","children","useEffect","length","isLoading"],"sourceRoot":""}